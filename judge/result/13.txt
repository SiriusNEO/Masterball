[32mLog:[Track] Tracking... IOEngine started successfully.[0m
[35mLog:[Report] -i: java.io.BufferedInputStream@681a9515 -llvm-o: java.io.PrintStream@404b9385 [0m
[32mLog:[Track] Tracking... ParseEngine started successfully.[0m
[32mLog:[Track] Tracking... ASTBuilder started building...[0m
[32mLog:[Track] Tracking... class def[0m
[32mLog:[Track] Tracking... class def[0m
[35mLog:[Report] AST Printer Start Sucess[0m

..* --- RootNode --- *

[GlobalScope]
VarTable: {}
FuncTable: {getInt=[FuncRegistry] name: getInt type: func, retType:INT args:, print=[FuncRegistry] name: print type: func, retType:VOID args:STRING , println=[FuncRegistry] name: println type: func, retType:VOID args:STRING , printInt=[FuncRegistry] name: printInt type: func, retType:VOID args:INT , printlnInt=[FuncRegistry] name: printlnInt type: func, retType:VOID args:INT , toString=[FuncRegistry] name: toString type: func, retType:STRING args:INT , main=[FuncRegistry] name: main type: func, retType:INT args:, getString=[FuncRegistry] name: getString type: func, retType:STRING args:, yhy=[FuncRegistry] name: yhy type: func, retType:INT args:INT }
ClassTable: {A=[ClassRegistry] 
name:A 
scope:[ClassScope]
VarTable: {b=[VarRegistry] B|b, v=[VarRegistry] INT[]|v}
FuncTable: {A=[FuncRegistry] name: A type: func, retType:VOID args:}
 , B=[ClassRegistry] 
name:B 
scope:[ClassScope]
VarTable: {a=[VarRegistry] A|a}
FuncTable: {B=[FuncRegistry] name: B type: func, retType:VOID args:}
 }

....* --- FuncDefNode --- *

[FuncRegistry] name: yhy type: func, retType:INT args:INT 

......* --- SuiteNode --- *

[NormalScope]
VarTable: {}

........* --- ReturnStmtNode --- *


..........* --- AtomExpNode --- *

type: INT
text: yhy

....* --- FuncDefNode --- *

[FuncRegistry] name: main type: func, retType:INT args:

......* --- SuiteNode --- *

[NormalScope]
VarTable: {c=[VarRegistry] A|c}

........* --- VarDefStmtNode --- *


..........* --- VarDefSingleNode --- *

[VarRegistry] A|c

........* --- ReturnStmtNode --- *


..........* --- FuncCallExpNode --- *

type: INT

............* --- AtomExpNode --- *

type: func, retType:INT args:INT 
text: yhy

............* --- IndexExpNode --- *

type: INT

..............* --- MemberExpNode --- *

type: INT[]

................* --- MemberExpNode --- *

type: A

..................* --- MemberExpNode --- *

type: B

....................* --- MemberExpNode --- *

type: A

......................* --- MemberExpNode --- *

type: B

........................* --- AtomExpNode --- *

type: A
text: c

..............* --- AtomExpNode --- *

type: INT
text: 10

....* --- ClassDefNode --- *

[ClassRegistry] 
name:A 
scope:[ClassScope]
VarTable: {b=[VarRegistry] B|b, v=[VarRegistry] INT[]|v}
FuncTable: {A=[FuncRegistry] name: A type: func, retType:VOID args:}
 

......* --- FuncDefNode --- *

[FuncRegistry] name: A type: func, retType:VOID args:

........* --- SuiteNode --- *

[NormalScope]
VarTable: {}

..........* --- ReturnStmtNode --- *


......* --- VarDefStmtNode --- *


........* --- VarDefSingleNode --- *

[VarRegistry] INT[]|v

......* --- VarDefStmtNode --- *


........* --- VarDefSingleNode --- *

[VarRegistry] B|b

....* --- ClassDefNode --- *

[ClassRegistry] 
name:B 
scope:[ClassScope]
VarTable: {a=[VarRegistry] A|a}
FuncTable: {B=[FuncRegistry] name: B type: func, retType:VOID args:}
 

......* --- FuncDefNode --- *

[FuncRegistry] name: B type: func, retType:VOID args:

........* --- SuiteNode --- *

[NormalScope]
VarTable: {}

..........* --- ReturnStmtNode --- *


......* --- VarDefStmtNode --- *


........* --- VarDefSingleNode --- *

[VarRegistry] A|a
[32mLog:[Track] Tracking... SemanticEngine started successfully.[0m
