[32mLog:[Track] Tracking... IOEngine started successfully.[0m
[35mLog:[Report] -i: java.io.BufferedInputStream@681a9515 -llvm-o: java.io.PrintStream@404b9385 [0m
[32mLog:[Track] Tracking... ParseEngine started successfully.[0m
[32mLog:[Track] Tracking... ASTBuilder started building...[0m
[32mLog:[Track] Tracking... class def[0m
[35mLog:[Report] AST Printer Start Sucess[0m

..* --- RootNode --- *

[GlobalScope]
VarTable: {a=[VarRegistry] INT|a}
FuncTable: {getInt=[FuncRegistry] name: getInt type: func, retType:INT args:, print=[FuncRegistry] name: print type: func, retType:VOID args:STRING , println=[FuncRegistry] name: println type: func, retType:VOID args:STRING , printInt=[FuncRegistry] name: printInt type: func, retType:VOID args:INT , printlnInt=[FuncRegistry] name: printlnInt type: func, retType:VOID args:INT , toString=[FuncRegistry] name: toString type: func, retType:STRING args:INT , main=[FuncRegistry] name: main type: func, retType:INT args:, getString=[FuncRegistry] name: getString type: func, retType:STRING args:}
ClassTable: {A=[ClassRegistry] 
name:A 
scope:[ClassScope]
VarTable: {b=[VarRegistry] INT|b}
FuncTable: {A=[FuncRegistry] name: A type: func, retType:VOID args:, f=[FuncRegistry] name: f type: func, retType:INT args:}
 }

....* --- VarDefStmtNode --- *


......* --- VarDefSingleNode --- *

[VarRegistry] INT|a

........* --- AtomExpNode --- *

type: INT
text: 0

....* --- ClassDefNode --- *

[ClassRegistry] 
name:A 
scope:[ClassScope]
VarTable: {b=[VarRegistry] INT|b}
FuncTable: {A=[FuncRegistry] name: A type: func, retType:VOID args:, f=[FuncRegistry] name: f type: func, retType:INT args:}
 

......* --- FuncDefNode --- *

[FuncRegistry] name: A type: func, retType:VOID args:

........* --- SuiteNode --- *

[NormalScope]
VarTable: {}

..........* --- ReturnStmtNode --- *


......* --- VarDefStmtNode --- *


........* --- VarDefSingleNode --- *

[VarRegistry] INT|b

......* --- FuncDefNode --- *

[FuncRegistry] name: f type: func, retType:INT args:

........* --- SuiteNode --- *

[NormalScope]
VarTable: {}

..........* --- PureStmtNode --- *


............* --- AssignExpNode --- *

type: INT

..............* --- AtomExpNode --- *

type: INT
text: b

..............* --- AtomExpNode --- *

type: INT
text: a

..........* --- ReturnStmtNode --- *


............* --- AtomExpNode --- *

type: INT
text: b

....* --- FuncDefNode --- *

[FuncRegistry] name: main type: func, retType:INT args:

......* --- SuiteNode --- *

[NormalScope]
VarTable: {i=[VarRegistry] INT|i, graph=[VarRegistry] INT[][]|graph}

........* --- VarDefStmtNode --- *


..........* --- VarDefSingleNode --- *

[VarRegistry] INT[][]|graph

............* --- NewExpNode --- *

type: INT[][]
NewType: INT[][]

........* --- PureStmtNode --- *


..........* --- AssignExpNode --- *

type: NULL

............* --- IndexExpNode --- *

type: INT[]

..............* --- AtomExpNode --- *

type: INT[][]
text: graph

..............* --- AtomExpNode --- *

type: INT
text: 0

............* --- AtomExpNode --- *

type: NULL
text: null

........* --- PureStmtNode --- *


..........* --- AssignExpNode --- *

type: INT[]

............* --- IndexExpNode --- *

type: INT[]

..............* --- AtomExpNode --- *

type: INT[][]
text: graph

..............* --- AtomExpNode --- *

type: INT
text: 1

............* --- NewExpNode --- *

type: INT[]
NewType: INT[]

........* --- PureStmtNode --- *


..........* --- AssignExpNode --- *

type: INT[]

............* --- IndexExpNode --- *

type: INT[]

..............* --- AtomExpNode --- *

type: INT[][]
text: graph

..............* --- AtomExpNode --- *

type: INT
text: 2

............* --- NewExpNode --- *

type: INT[]
NewType: INT[]

........* --- VarDefStmtNode --- *


..........* --- VarDefSingleNode --- *

[VarRegistry] INT|i

............* --- AtomExpNode --- *

type: INT
text: 0

........* --- ForStmtNode --- *

init: 

..........* --- BinaryExpNode --- *

type: BOOL
op: &&

............* --- BinaryExpNode --- *

type: BOOL
op: ==

..............* --- AtomExpNode --- *

type: INT
text: i

..............* --- AtomExpNode --- *

type: INT
text: 1

............* --- AtomExpNode --- *

type: BOOL
text: true
condi: 
incr: 
body: 

..........* --- SuiteStmtNode --- *


............* --- SuiteNode --- *

[NormalScope]
VarTable: {}

..............* --- ControlStmtNode --- *

break

........* --- ReturnStmtNode --- *


..........* --- AtomExpNode --- *

type: INT
text: 0
[32mLog:[Track] Tracking... SemanticEngine started successfully.[0m
[35mLog:[Report] 3[0m
